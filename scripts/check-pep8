#!/usr/bin/env bash

# This script checks only that the modified files follow pep8

# Fail on error
set -e

# Exit on pipe fail
set -o pipefail

BLACK=${BLACK:-black}
PYLINT=${PYLINT:-pylint}
MAX_LINE_LENGTH=${MAX_LINE_LENGTH:-120}

command -v git >/dev/null 2>&1 || { echo >&2 "git is missing"; exit 1; }
command -v tput >/dev/null 2>&1 || { echo >&2 "tput is missing"; exit 1; }
command -v ${BLACK} >/dev/null 2>&1 || { echo >&2 "${BLACK} is missing"; exit 1; }
command -v ${PYLINT} >/dev/null 2>&1 || { echo >&2 "${PYLINT} is missing"; exit 1; }

# check if stdout is a terminal.
if test -t 1; then
	# see if it supports colors.
	ncolors=$(tput colors)
	if test -n "$ncolors" && test $ncolors -ge 8; then
		normal="$(tput sgr0)"
		red="$(tput setaf 1)"
		green="$(tput setaf 2)"
	fi
fi

# pylint returns a bitmask as status code:
#
# 0     no error
# 1     fatal message issued
# 2     error message issued
# 4     warning message issued
# 8     refactor message issued
# 16    convention message issued
# 32    usage error

# grep will exit with 1 if no lines are found
FILES=$(git --no-pager diff --diff-filter=d --name-only origin/master | grep -v "old/" | grep -E ".py\$" || exit 0)
if [ -z "${FILES}" ] ; then
       exit 0
fi

BLACK_STATUS=0
${BLACK} -v --check --line-length ${MAX_LINE_LENGTH} ${FILES} || BLACK_STATUS=${?}
# Note: If black passes (formatting is correct) and pylint fails, we
# fail with the exit status from pylint.
${PYLINT} --persistent=no --max-line-length=${MAX_LINE_LENGTH} ${FILES} || {
	pylint_status=${?}
	exitcode=${BLACK_STATUS}
	if (( ${pylint_status} \& 1 )); then
		echo fatal messsage >&2
		exitcode=2
	fi
	if (( ${pylint_status} \& 2 )); then
		echo error messsage >&2
		exitcode=2
	fi
	if (( ${pylint_status} \& 4 )); then
		echo warning messsage >&2
		exitcode=2
	fi
	if (( ${pylint_status} \& 8 )); then
		echo refactor messsage >&2
	fi
	if (( ${pylint_status} \& 16 )); then
		echo convention messsage >&2
	fi
	# This should not happen!
	if (( ${pylint_status} \& 32 )); then
		echo usage error >&2
		exitcode=2
	fi
	exit ${exitcode}
}
